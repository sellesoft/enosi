options := lake.getOptions()

mode := options.mode or "debug"
build_dir := lake.cwd().."/build/"..mode.."/"

lake.mkdir(build_dir, {make_parents = true})

lakeexe := lake.target(build_dir.."lake")

report := assert(options.report)
reports := assert(options.reports)

assert(reports.iro.objFiles, "lake depends on iro's object files but they were not found in the reports table. Was iro's module imported? Maybe it was imported after this one.")

recipes := assert(options.recipes)

report.executable(tostring(lakeexe))

c_files := lake.find("src/**/*.cpp")

for _,c_file in ipairs(c_files) do
	o_file := c_file:gsub("(.-)%.cpp", build_dir.."%1.o")
	d_file := o_file:gsub("(.-)%.o", "%1.d")
	
	report.objFile(o_file)

	lake.target(o_file)
		:depends_on(c_file)
		:recipe(recipes.compiler(c_file, o_file))

	lake.target(d_file)
		:depends_on(c_file)
		:recipe(recipes.depfile(c_file, d_file, o_file))
end

ofiles := lake.flatten {reports.lake.objFiles, reports.iro.objFiles}

lakeexe
	:depends_on(ofiles)
	:recipe(recipes.linker(ofiles, lakeexe))

