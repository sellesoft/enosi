typedef enum {
	tok_identifier,
	tok_literal_integer,
	tok_literal_float,
	tok_literal_double,
	tok_literal_string,
	tok_comment,
	tok_whitespace,
	tok_auto,
	tok_break,
	tok_case,
	tok_char,
	tok_const,
	tok_continue,
	tok_default,
	tok_do,
	tok_double,
	tok_else,
	tok_enum,
	tok_extern,
	tok_float,
	tok_for,
	tok_goto,
	tok_if,
	tok_inline,
	tok_int,
	tok_long,
	tok_register,
	tok_restrict,
	tok_return,
	tok_short,
	tok_signed,
	tok_sizeof,
	tok_static,
	tok_struct,
	tok_switch,
	tok_typedef,
	tok_union,
	tok_unsigned,
	tok_void,
	tok_volatile,
	tok_while,
	tok__Aliasas,
	tok__Alignof,
	tok__Atomic,
	tok__Bool,
	tok__Complex,
	tok__Generic,
	tok__Imaginary,
	tok__Noreturn,
	tok__Static_assert,
	tok__Thread_local,
	tok_alignas,
	tok_alignof,
	tok_bool,
	tok_catch,
	tok_class,
	tok_concept,
	tok_const_cast,
	tok_consteval,
	tok_constexpr,
	tok_co_await,
	tok_co_return,
	tok_co_yield,
	tok_decltype,
	tok_delete,
	tok_dynamic_cast,
	tok_explicit,
	tok_export,
	tok_false,
	tok_friend,
	tok_mutable,
	tok_namespace,
	tok_new,
	tok_noexcept,
	tok_nullptr,
	tok_operator,
	tok_private,
	tok_protected,
	tok_public,
	tok_reinterpret_cast,
	tok_requires,
	tok_static_assert,
	tok_static_cast,
	tok_template,
	tok_this,
	tok_thread_local,
	tok_throw,
	tok_true,
	tok_try,
	tok_typeid,
	tok_typename,
	tok_using,
	tok_virtual,
	tok_wchar_t,
	tok_explanation_mark,
	tok_percent,
	tok_caret,
	tok_ampersand,
	tok_asterisk,
	tok_parenthesis_left,
	tok_parenthesis_right,
	tok_minus,
	tok_minus_double,
	tok_plus,
	tok_plus_double,
	tok_equal,
	tok_equal_double,
	tok_explanation_mark_equal,
	tok_brace_left,
	tok_brace_right,
	tok_vertical_bar,
	tok_tilde,
	tok_square_left,
	tok_square_right,
	tok_backslash,
	tok_semicolon,
	tok_quote_single,
	tok_colon,
	tok_quote_double,
	tok_angle_left,
	tok_angle_right,
	tok_question_mark,
	tok_comma,
	tok_period,
	tok_slash,
	tok_pound,
	tok_angle_left_double,
	tok_angle_right_double,
	tok_angle_left_equal,
	tok_angle_right_equal,
	tok_ampersand_double,
	tok_vertical_bar_double,
	tok_ellipses,
	tok_asterisk_equal,
	tok_slash_equal,
	tok_percent_equal,
	tok_plus_equal,
	tok_minus_equal,
	tok_arrow,
	tok_angle_left_double_equal,
	tok_angle_right_double_equal,
	tok_ampersand_equal,
	tok_caret_equal,
	tok_vertical_bar_equal,
	tok_tilde_equal,
	tok_lpp_lua_line,
	tok_lpp_lua_block,
	tok_lpp_lua_inline,
	tok_lpp_lua_macro,
	tok_lpp_lua_macro_argument,
} TokenKind;

typedef struct kwvk 
{
    u64 key;
    TokenKind kind;
} kwvk;

static const kwvk kwmap_c[] = 
{
	{15679548220078514844ULL, tok_auto},
	{2225809343742020674ULL, tok_break},
	{13767688735830522163ULL, tok_case},
	{18155960589143561623ULL, tok_char},
	{3404872168546029130ULL, tok_const},
	{394616651637328582ULL, tok_continue},
	{16042707154760931640ULL, tok_default},
	{7186742432765336250ULL, tok_do},
	{1279180790307662882ULL, tok_double},
	{1230638169352911182ULL, tok_else},
	{18373491194716572246ULL, tok_enum},
	{3475650290862082129ULL, tok_extern},
	{12711799637269479707ULL, tok_float},
	{11177114082093561914ULL, tok_for},
	{12582749325061918612ULL, tok_goto},
	{7181947462555654204ULL, tok_if},
	{12690630346584198470ULL, tok_inline},
	{9381988726192025312ULL, tok_int},
	{9126192451412689337ULL, tok_long},
	{1484733044225392002ULL, tok_register},
	{7090402932922708695ULL, tok_restrict},
	{15927598861118102029ULL, tok_return},
	{6575069789933575015ULL, tok_short},
	{14256395814296238587ULL, tok_signed},
	{17059629223390560727ULL, tok_sizeof},
	{17503418137310285413ULL, tok_static},
	{9238737290386939374ULL, tok_struct},
	{15705934518622144399ULL, tok_switch},
	{1660282336309474726ULL, tok_typedef},
	{7659189203552460422ULL, tok_union},
	{8478124901977740776ULL, tok_unsigned},
	{11072332102672405745ULL, tok_void},
	{15725593020160273271ULL, tok_volatile},
	{16641819622978630752ULL, tok_while},
	{5114345449893733116ULL, tok__Aliasas},
	{16450829224940329488ULL, tok__Alignof},
	{12077489817969435209ULL, tok__Atomic},
	{5440290311735426832ULL, tok__Bool},
	{9668622025059473548ULL, tok__Complex},
	{13819231533408669053ULL, tok__Generic},
	{6394444443533364025ULL, tok__Imaginary},
	{16637138783018430733ULL, tok__Noreturn},
	{7774379895225944381ULL, tok__Static_assert},
	{5065535344853468912ULL, tok__Thread_local},
};
static const u64 kwmap_c_count = 44;

static const kwvk kwmap_cpp[] =
{
	{7527227459347283924ULL, tok_alignas},
	{7532818475975601509ULL, tok_alignof},
	{16025152185524026059ULL, tok_bool},
	{17698476921995602778ULL, tok_catch},
	{803519913013975409ULL, tok_class},
	{11512327309433312793ULL, tok_concept},
	{9483594899747465328ULL, tok_const_cast},
	{9228490673113053556ULL, tok_consteval},
	{5346680263891726685ULL, tok_constexpr},
	{11300771715429879676ULL, tok_co_await},
	{6891150024020712836ULL, tok_co_return},
	{7302658605056086007ULL, tok_co_yield},
	{8710461531448743563ULL, tok_decltype},
	{13417495919397064332ULL, tok_delete},
	{6280978349508136706ULL, tok_dynamic_cast},
	{15814322038470144287ULL, tok_explicit},
	{17589632323030771741ULL, tok_export},
	{18158723172670514990ULL, tok_false},
	{18141207679323220115ULL, tok_friend},
	{10235159079904919235ULL, tok_mutable},
	{15412236852707998162ULL, tok_namespace},
	{6254579633174982255ULL, tok_new},
	{11157403650123322509ULL, tok_noexcept},
	{15746293479299465244ULL, tok_nullptr},
	{10462198234792314127ULL, tok_operator},
	{16250789628458819146ULL, tok_private},
	{4492952734174577279ULL, tok_protected},
	{404266576707461834ULL, tok_public},
	{1327724422308958027ULL, tok_reinterpret_cast},
	{1925930585102941643ULL, tok_requires},
	{6842661601651096836ULL, tok_static_assert},
	{12728474846434894293ULL, tok_static_cast},
	{13086112464204875789ULL, tok_template},
	{6656011781173375375ULL, tok_this},
	{2144926089899815707ULL, tok_thread_local},
	{7179845800285830801ULL, tok_throw},
	{12924358358278320483ULL, tok_true},
	{3927955856315041168ULL, tok_try},
	{18331203592833137754ULL, tok_typeid},
	{3415681370916075604ULL, tok_typename},
	{14657771978582562705ULL, tok_using},
	{15912368897107626234ULL, tok_virtual},
	{8947968484149990559ULL, tok_wchar_t},
};
static const u64 kwmap_cpp_count = 43;