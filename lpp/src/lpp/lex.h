/*
 *
 *  Lexer for C, C++ and lpp
 *
 */

#ifndef _lpp_lex_h
#define _lpp_lex_h

#include "common.h"

typedef struct lppContext lppContext;

/* ------------------------------------------------------------------------------------------------
 *	TokenKind enum generated by scripts/tokens.lua. The actual definition of tokens is there. Each
 *	name is used in C by prefixing it with 'tok_'
 */ 
#include "generated/token.enum.h"

typedef struct 
{
	TokenKind kind;
	
	str raw;

	int line;
	int column;

	union
	{
		s64 _s64;
		f64 _f64;
		f32 _f32;
	} literal;
} Token;

typedef struct Lexer
{
	Token* tokens;
	s64    token_count;
	s64    token_space;

	u64* lua_tokens;
	s64  lua_token_count;
	s64  lua_token_space;

	u8* stream;

	s64 line;
	s64 column;

	lppContext* lpp;
} Lexer;

/* ----------------------------------------------
 *	
 */
void lpp_lexer_init(lppContext* lpp, Lexer* l, u8* stream);
void lpp_lexer_run(Lexer* lexer);

#endif // _lpp_lex_h
