/*
 *  Tracker of input state.
 */

$ require "common"

@@lpp.import "input/InputState.lh"

/* ============================================================================
 */
struct InputMgr
{
  InputState real_state;

  b8   init();
  void deinit();

  // Prepares input for next frame. This will clear any pressed/released
  // keys and reset scroll and char input states.
  b8 update();

  // TODO(sushi) maybe would be useful to include filters in this api, 
  //             but that might be annoying so for now things just 
  //             modify the input state manually.
  void cloneInputState(InputState* state)
  {
    *state = real_state;
  }

  // API for notifying the mgr about inputs, which it uses to update its
  // real state. This is primarily for use by Window right now.
  void onKeyPress(Key key);
  void onKeyRelease(Key key);
  void onMButtonPress(MouseButton mbutton);
  void onMButtonRelease(MouseButton mbutton);
  void onCursorMove(vec2f new_pos);
  void onCharInput(String chars);
  void onAddScroll(f32 scroll);
};  
 
