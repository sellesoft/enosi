$ require "common"

@@lpp.import "game/Eye.sys.lh"

@@lpp.import "game/GameMgr.lh"
@@lpp.import "game/Transform.comp.lh"

@defFileLogger(eye, Info)

/* ----------------------------------------------------------------------------
 */
b8 EyeSys::update(GameMgr& gamemgr)
{
  if (auto* transform = gamemgr.entmgr.tryComp<Transform>(attached))
  {
    pos = transform->pos;
    rotation = transform->rotation;
  }
  return true;
}

/* ----------------------------------------------------------------------------
 */
void EyeSys::getViewMat(mat3x2* view) const
{
  *view = 
    mat3x2::createInverseTransform(
      pos,
      rotation,
      {zoom,zoom});
}

/* ----------------------------------------------------------------------------
 */
vec2f EyeSys::screenToWorld(vec2f sp, vec2f ss) const
{
  vec2f wp = sp - ss / 2.f;
  wp.x /= pixels_per_meter;
  wp.y /= -f32(pixels_per_meter);

  auto tm = mat3x2::createTransform(pos, rotation, {zoom,zoom});
  return tm.transformVec(wp);
}

/* ----------------------------------------------------------------------------
 */
vec2f EyeSys::worldToScreen(vec2f wp, vec2f ss) const
{
  auto tm = mat3x2::createInverseTransform(pos, rotation, {zoom, zoom});
  vec2f sp = tm.transformVec(wp);

  sp.x *=  pixels_per_meter;
  sp.y *= -f32(pixels_per_meter);

  sp += ss / 2.f;

  return sp;
}
