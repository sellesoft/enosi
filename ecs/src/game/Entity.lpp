$ local lpp = require "lpp"
$ local reflect = require "reflect.Reflector"
$ local ui = require "ui.UI"

@@lpp.import "game/Entity.lh"

#include "iro/logger.h"
#include "iro/memory/allocator.h"

static Logger logger = 
  Logger::create("entity"_str, Logger::Verbosity::Info);

/* ----------------------------------------------------------------------------
 */
b8 Entity::init(String name)
{
  this->name = name.allocateCopy(&mem::stl_allocator);

  if (!components.init())
    return ERROR("failed to initialize component map for entity ", name, "\n");

  return true;
}

/* ----------------------------------------------------------------------------
 */
void Entity::deinit()
{
  mem::stl_allocator.free(name.ptr);
  components.deinit();
}

/* ----------------------------------------------------------------------------
 */
b8 Entity::addComp(Component* cmp)
{
  assert(isnil(cmp->owner));

  if (components.find(cmp->kind))
    return false;

  components.insert(cmp);

  return true;
}
