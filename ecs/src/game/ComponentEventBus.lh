/*
 *  System for subscribing to events that occur on Entities containing
 *  some kind of component.
 */

$ require "common"

@@lpp.import "game/EntityId.lh"
@@lpp.import "game/Entity.lh"

struct ComponentEventBus
{
  struct CompSubLists* sub_lists;

  template<typename TComp, typename TEvent>
  void subscribeTo(void* subscriber, void (*cb)(void*, TComp&, TEvent&));

  template<typename TEvent>
  void raise(EntityId id, TEvent&& event) const { raise<TEvent>(id, event); }

  template<typename TEvent>
  void raise(EntityId id, TEvent& event);
};
