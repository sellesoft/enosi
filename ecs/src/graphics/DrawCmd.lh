/*
 *  A command that alters the state of the renderer.
 */

$ require "common"

#include "math/vec.h"
#include "math/mat.h"

@@lpp.import "graphics/Texture.lh"
@@lpp.import "graphics/Framebuffer.lh"
@@lpp.import "graphics/Buffer.lh"
@@lpp.import "graphics/Pipeline.lh"

namespace gfx
{

/* ============================================================================
 */
struct DrawCmd
{
  static constexpr u64 MAX_PUSH_CONSTANT_SIZE = 128;

  enum class Kind
  {
    SetScissor,
    SetViewport,
    BindFramebuffer,
    BindPipeline,
    BindTexture,
    BindUniformBuffer,
    BindStorageBuffer,
    BindVertexBuffer,
    BindIndexBuffer,
    PushConstant,
    Draw,
$ if ECS_DEBUG then
    DebugBeginLabel,
    DebugEndLabel,
    DebugInsertLabel,
$ end -- if ECS_DEBUG
  };

  Kind kind;

  union
  {
    struct
    {
      vec2i pos;
      vec2u size;
    } set_scissor;

    struct
    {
      vec2f pos;
      vec2f size;
    } set_viewport;

    Framebuffer bind_framebuffer;

    Pipeline bind_pipeline;

    Texture bind_texture;

    Buffer bind_buffer;

    struct
    {
      u8 data[MAX_PUSH_CONSTANT_SIZE];
      u64 size;
    } push_constant;

    struct
    {
      u64 index_start;
      u64 index_count;
      u64 vertex_start;
    } draw;

$ if ECS_DEBUG then
    struct
    {
      char label[64];
      vec4f color;
    } debug_label;
$ end -- if ECS_DEBUG
  };
};

}
