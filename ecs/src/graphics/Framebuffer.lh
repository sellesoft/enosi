/*
 *  A Framebuffer is a wrapper over a texture that can be rendered to.
 */
$ require "common"

#include "iro/Common.h"
#include "iro/Unicode.h"
#include "math/vec.h"

@@lpp.import "graphics/Texture.lh"

using namespace iro;

namespace gfx
{

struct Renderer;
struct Texture;

/* ============================================================================
 */
struct Framebuffer
{
  u32 index;

  b8 init(
    Renderer& renderer,
    u32 width,
    u32 height,
    Texture texture,
    vec4f clear_color,
    String name = "unnamed"_str);

  b8 deinit(Renderer& renderer);

  DefineNilTrait(Framebuffer, {0}, x.index == 0);
};

}
