/*
 *  Representation of a Texture on the GPU. This likely should only be used
 *  when a reference to a Texture needs to be kept around, eg. to render to
 *  one using a Framebuffer.
 */
$ require "common"

#include "iro/Common.h"

@@lpp.import "graphics/TextureParams.lh"

namespace gfx
{

struct Renderer;

/* ============================================================================
 */
struct Texture
{
  u32 index;

  b8 init(
    Renderer&        renderer,
    u32              width,
    u32              height,
    ImageFormat      format,
    ImageAddressMode address_mode,
    ImageFilter      filter,
    void*            pixels);

  b8 deinit(Renderer& renderer);

  inline b8 operator==(const Texture& other) const
  {
    return index == other.index;
  }

  inline b8 operator!=(const Texture& other) const
  {
    return index != other.index;
  }
};

}

DefineNilValue(gfx::Texture, { 0 }, { return x.index == 0; });