$ require "common"
$ local m = require "reflect.Metadata"

@@lpp.import "graphics/Ref.defs.lh"

#include "math/Rect.h"
#include "Color.h"

namespace ui 
{

/* ============================================================================
 */
struct ItemSkin
{
  gfx::TextureRef texture;
  Rect uv;
  Color color;
  Rect border;
  Color border_color;

  // TODO(sushi) get 9-slicing working so we can use css-like border textures.
};

/* ============================================================================
 */
enum class TextWrap
{
  None,
  Char,
  Word,
};

/* ============================================================================
 */
struct TextSkin
{
  gfx::FontRef font;
  TextWrap     wrap;
  @m.default "{r=255,g=255,b=255,a=255}"
  Color        color;
  f32          font_height;
  f32          tab_spaces;
  vec2f        align;
};

/* ============================================================================
 */
struct TextItemSkin
{
  TextSkin text;
  ItemSkin item;

  vec2f text_padding;
};

/* ============================================================================
 */
struct ButtonSkin
{
  TextItemSkin normal;
  TextItemSkin hovered;
  TextItemSkin pressed;
  TextItemSkin disabled;
};

/* ============================================================================
 */
struct TextFieldSkin
{
  TextItemSkin box;

  vec2f padding;

  Color cursor_color;
};

/* ============================================================================
 */
struct DropDownSkin
{
  TextItemSkin selection;
};

/* ============================================================================
 */
struct ScrollBarSkin
{
  ButtonSkin thumb;
  ItemSkin rail;

  f32 thumb_size;
  f32 rail_size;
};

}
