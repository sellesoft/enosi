$ require "common"
$ local m = require "reflect.Metadata"

@@lpp.import "graphics/Ref.defs.lh"

#include "math/Rect.h"
#include "Color.h"

namespace ui 
{

/* ============================================================================
 */
@m.def
@m.source_types(skin)
struct ItemSkinDef
{
  gfx::TextureRef texture;
  Rect uv;
  Color color;
};

/* ============================================================================
 */
enum class TextWrap
{
  None,
  Char,
  Word,
};

/* ============================================================================
 */
@m.def
@m.source_types(skin)
struct TextSkinDef
{
  gfx::FontRef font;
  TextWrap     wrap;
  @m.default "{r=255,g=255,b=255,a=255}"
  Color        color;
  f32          font_height;
  f32          tab_spaces;
  vec2f        align;
};

/* ============================================================================
 */
@m.def
@m.source_types(skin)
struct TextItemSkinDef
{
  TextSkinDef text;
  ItemSkinDef item;
};

/* ============================================================================
 */
struct ButtonSkinDef
{
  TextItemSkinDef normal;
  TextItemSkinDef hovered;
  TextItemSkinDef pressed;
  TextItemSkinDef disabled;
};

/* ============================================================================
 */
struct TextFieldSkinDef
{
  TextItemSkinDef box;

  vec2f padding;

  Color cursor_color;
};

/* ============================================================================
 */
struct DropDownSkinDef
{
  TextItemSkinDef selection;
};

}
